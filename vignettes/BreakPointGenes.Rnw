%\VignetteIndexEntry{Introduction to BreakPointGenes}

\documentclass{article}
\usepackage[colorlinks=true,linkcolor=black,citecolor=black,urlcolor=blue]{
  hyperref}

\begin{document}

\newcommand{\pkg}[1]{\texttt{#1}}
\newcommand{\code}[1]{\texttt{#1}}

\title{Introduction to BreakPointGenes}
\author{Stef van Lieshout, Evert van den Broek}
\maketitle

\section{Running BreakPointGenes}

This is a short tutorial on how to use the \pkg{BreakPointGenes} package. It covers an
example run using the included data set of chromosomes 7--10 of a
low grade glioma (LGG) sample. First step is naturally to load the package.

<<>>=
library(BreakPointGenes)
@

<<echo=FALSE>>=
options("BreakPointGenes::verbose"=NA)
options(width=40)
@

\subsection{Obtaining data from a cghCall object (ouput from packages CGHcall or QDNAseq)}

Then we need to obtain gene annotations (mainly for the location)
For hg19 reference they can be downloaded with (NOT AVAILABLE YET):

\begin{Schunk}
\begin{Sinput}
> geneAnnotations <- getGeneAnnotations()
Downloading gene annotations for genome hg19
\end{Sinput}
\end{Schunk}

After downloading, the gene annotations can be saved locally with
\code{saveRDS}, and in the future be read from the local file with
\code{loadRDS} instead of relying on downloading.

\subsection{Obtaining data from a cghCall object (ouput from packages CGHcall or QDNAseq)}

Then we need to obtain copy number data. Because the \pkg{BreakPointGenes} package is an extension of the work done in packages CGHcall (for array data) and QDNAseq (for sequencing data), an object of class "cghCall" can be used as input.

\begin{Schunk}
\begin{Sinput}
> bp <- getBreakpoints( data = cghCallObject )
\end{Sinput}
\end{Schunk}


\subsection{Processing bam files}

Next step is to load the copy number data from a cghCall file or from a
text file. This can be done for example with one of the commands below.

<<eval=FALSE>>=
bp <- getBreakpoints( data = cghCallObject )
# using the output of CGHcall or QDNAseq

# or

bp <- getBreakpoints( data = matrix(), data2 = matrix() )
# providing segments and call values directly (NOT YET POSSIBLE)

@

This will return an object of class \code{CopyNumberBreakPoints}.

<<>>=
library( "BreakPointGenes" )

# load built-in dataset (CGHcall)
data( "LGG150.data" )
# load built-in gene annotation dataset
data( gene.annotation.hg19 )
# setup the breakpoint data
bp <- getBreakpoints( data = LGG150.data )
# optionally filter the data
bp <- bpFilter( bp, filter = "deltaSeg", threshold = 0.2 )
# setup the gene data 
bp <- addGeneAnnotation( bp, gene.annotation.hg19 )
# perform gene analysis
bp <- bpGenes( bp )
@

\clearpage

\section{Session Information}

The version number of R and packages loaded for generating the vignette were:

<<echo=FALSE>>=
sessionInfo()
@

\end{document}

% EOF
